{"version":3,"sources":["./src/app/shared/gruppe-fb-list.service.ts","./src/app/add-faecher/addFaecher.component.scss","./src/app/dashboard/dashboard.component.scss","./src/app/add-faecher/addFaecher.component.ts","./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/todo-list/todo-list.component.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/gruppe/gruppe.component.html","./src/app/shared/addFaecher.service.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/gruppe/gruppe.component.scss","./src/app/gruppe/gruppe.component.ts","./src/app/shared/helpers/database-joins.ts","./src/app/todo-list/todo-list.component.scss","./src/app/add-faecher/addFaecher.component.html","./src/app/pipes/group-filter.pipe.ts","./src/app/shared/todo-list.service.ts","./src/app/todo-list/todo-list.component.html","./src/app/pipes/todo-filter-pipe.pipe.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { empty, Observable, Subscription } from 'rxjs';\r\nimport { Todo } from './todo';\r\nimport { GruppeFB } from './gruppe-fb';\r\nimport { GruppeComponent } from '../gruppe/gruppe.component';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GruppeFBListService {\r\n  public gruppen$: Observable<GruppeFB[]> = empty();\r\n\r\n  private userId = '';\r\n\r\n  constructor(public firestore: AngularFirestore, public afAuth: AngularFireAuth, public usrService: UserService) {\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        this.userId = state.uid;\r\n        this.gruppen$ = firestore.collection<GruppeFB>('gruppen', ref => ref.orderBy('Gruppenname'))\r\n          .valueChanges({idField: 'id'});\r\n\r\n      } else {\r\n\r\n        this.userId = '';\r\n        this.gruppen$ = empty();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getUsersGroups(): Observable<GruppeFB[]>{\r\n    return this.firestore.collection<GruppeFB>('gruppen', ref => ref.orderBy('Gruppenname'))\r\n      .valueChanges({idField: 'id'})\r\n      .pipe(\r\n        map(data => data.filter(grp => this.usrService.memberGroupsArr.indexOf(grp.id) !== -1))\r\n      );\r\n  }\r\n\r\n  public getGroupbyId(grpId: string): Observable<GruppeFB[]>{\r\n    // return this.firestore.doc<GruppeFB>('gruppen/' + grpId).valueChanges();\r\n    return this.firestore.collection<GruppeFB>('gruppen', ref => ref.where('id', '==', grpId).orderBy('Gruppenname'))\r\n      .valueChanges({IdField: 'id'});\r\n  }\r\n  public addGruppe(Gruppenname: string, Beschreibung: string): void {\r\n    this.firestore.collection('gruppen').add\r\n    ({ Gruppenname:Gruppenname, Beschreibung:Beschreibung, userUid: this.userId });\r\n  }\r\n\r\n  public deleteGruppeById(id: string): void {\r\n    if (confirm('Wollen Sie wirklich Löschen?'))\r\n    this.firestore.doc('gruppen/' + id).delete();\r\n    }\r\n\r\n  public updateGruppeById(gruppen: GruppeFB): void {\r\n      this.firestore.doc('gruppen/' + gruppen.id).update({ Gruppenname: gruppen.Gruppenname});\r\n    }\r\n\r\n}\r\n\r\n","export default \"button {\\n  margin-right: 10px;\\n}\\n\\n.date {\\n  display: inline-block;\\n  width: 100px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFkZEZhZWNoZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtBQUNGOztBQUVBO0VBQ0UscUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0FBQ0YiLCJmaWxlIjoiYWRkRmFlY2hlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uZGF0ZSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiAxMDBweDtcclxufVxyXG5cclxudGFibGV7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG4iXX0= */\";","export default \".bar-chart > div {\\n  height: 40px;\\n  margin-bottom: 10px;\\n  white-space: nowrap;\\n}\\n.bar-chart .todo-bar {\\n  background-color: #03a9f4;\\n  height: 40px;\\n}\\n.bar-chart .done-bar {\\n  background-color: #4caf50;\\n  height: 40px;\\n}\\ntable {\\n  width: 100%;\\n}\\n.create {\\n  margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFlBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQVI7QUFHSTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtBQURSO0FBSUk7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUFGUjtBQUtBO0VBQU8sV0FBQTtBQURQO0FBR0E7RUFBUSxZQUFBO0FBQ1IiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhci1jaGFydCB7XHJcbiAgICA+ZGl2IHtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgfVxyXG5cclxuICAgIC50b2RvLWJhciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAzYTlmNDtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmRvbmUtYmFyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xyXG4gICAgICAgIGhlaWdodDogNDBweDtcclxuICAgIH1cclxufVxyXG50YWJsZSB7d2lkdGg6IDEwMCU7XHJcbn1cclxuLmNyZWF0ZXttYXJnaW46IDEwcHg7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {addFaecherListService } from '../shared/addFaecher.service';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-fach',\r\n  templateUrl: './addFaecher.component.html',\r\n  styleUrls: ['./addFaecher.component.scss']\r\n})\r\nexport class FaecherComponent implements OnInit {\r\n\r\n  public Fachname = '';\r\n  public Fachbeschreibung = '';\r\n  public displayedColumns = ['Fachname', 'Fachbeschreibung', 'Löschen' ]\r\n\r\n  constructor(public FaecherService: addFaecherListService, public usrService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  public addFach(): void {\r\n\r\n    if (this.Fachname ) {\r\n      this.FaecherService.addFach(this.Fachname, this.Fachbeschreibung);\r\n      this.Fachname = '';\r\n      this.Fachbeschreibung = '';\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig : {\r\n    apiKey: \"AIzaSyBrj4zqL8pALwADBTly446FirqqSQNBMNg\",\r\n    authDomain: \"todolist-demo-e8008.firebaseapp.com\",\r\n    databaseURL: \"https://todolist-demo-e8008.firebaseio.com\",\r\n    projectId: \"todolist-demo-e8008\",\r\n    storageBucket: \"todolist-demo-e8008.appspot.com\",\r\n    messagingSenderId: \"120790186589\",\r\n    appId: \"1:120790186589:web:d1f3ecdff4b808f6996bb4\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable, Subscription, empty, forkJoin, combineLatest, merge } from 'rxjs';\r\nimport { appuser } from './AppUser';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  public memberGroupsArr: string[] = [];\r\n  public UserId: string = \"\";\r\n  public currentUser$:Observable<appuser | undefined> = empty();\r\n  constructor(public db: AngularFirestore, public afAuth: AngularFireAuth) {\r\n    this.getUser();\r\n  }\r\n  private getUser(){\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        let userUid = state.uid;\r\n        let userDoc = this.db.collection('users').doc<appuser>(userUid);\r\n        this.currentUser$ = userDoc.valueChanges();\r\n        this.currentUser$.subscribe(u => {\r\n          if (u?.memberingroups)\r\n            this.memberGroupsArr = u?.memberingroups;\r\n            this.UserId = (u ? u.uid : \"\");\r\n          return u;\r\n        });\r\n      } else {\r\n        this.currentUser$ = empty();\r\n      }\r\n    });\r\n  }\r\n\r\n  public addUser(uid: (string | undefined), displayName: (string | null | undefined), email: (string | null | undefined)): void {\r\n    let userDoc = this.db.collection('users').doc(uid);\r\n    userDoc.get().subscribe(x => {\r\n      if (!x.exists){\r\n        this.db.collection('users').doc(uid).set({ uid: uid, displayName: displayName, email: email, memberingroups: []});\r\n      }\r\n    });\r\n  }\r\n\r\n  public addUser2Group(groupId: string): void{\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        if (this.memberGroupsArr.indexOf(groupId) === -1)\r\n        {\r\n          let usrobj = this.db.collection('users').doc(state.uid);\r\n          this.memberGroupsArr.push(groupId);\r\n          usrobj.update({memberingroups: this.memberGroupsArr});\r\n        }\r\n      }\r\n    });\r\n  }\r\n  public remUserGroup(groupId: string): void{\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        let usrobj = this.db.collection('users').doc(state.uid);\r\n        this.memberGroupsArr.splice(this.memberGroupsArr.indexOf(groupId), 1);\r\n        usrobj.update({memberingroups: this.memberGroupsArr});\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<h2>Dashboard</h2>\\r\\n\\r\\n<div class='create'>\\r\\n  <button mat-raised-button (click)=\\\"onCreate()\\\">\\r\\n    <mat-icon>add</mat-icon>create\\r\\n  </button>\\r\\n</div>\\r\\n<!--  Neue Tabelle -->\\r\\n<table mat-table  [dataSource]=\\\"(todoListService.todos$ | todoFilterPipe: (false))\\\" class=\\\"mat-elevation-z8\\\" matSort >\\r\\n\\r\\n    <!-- Toggle Done Column-->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell  *matHeaderCellDef mat-sort-header> Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n        <button mat-button (click)=\\\"todoListService.toggleDoneStateById4User(element)\\\">Done</button>\\r\\n        <button mat-icon-button color=\\\"warn\\\"><mat-icon>launch</mat-icon></button>\\r\\n    </ng-container>\\r\\n\\r\\n     <!-- TodoDueDate Column -->\\r\\n     <ng-container matColumnDef=\\\"todoDueDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fälligkeitsdatum</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate.seconds * 1000 | date:'EE, dd.MM.'}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- subject Column -->\\r\\n    <ng-container matColumnDef=\\\"subject\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fach </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subjectobj?.Fachname}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- group Column -->\\r\\n    <ng-container matColumnDef=\\\"group\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gruppe</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.groupobj?.Gruppenname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Description Column -->\\r\\n    <ng-container matColumnDef=\\\"category\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Kategorie </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"todoDescription\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Beschreibung </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Toggle Done Column-->\\r\\n    <ng-container matColumnDef=\\\"deleteTodoById\\\">\\r\\n      <th mat-header-cell  *matHeaderCellDef > Löschen </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n        <button mat-button color=\\\"red\\\" (click)=\\\"todoListService.deleteTodoById(element.id)\\\">X</button>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n        (click)=\\\"todoListService.toggleDoneStateById(row.id)\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n\\r\\n  <mat-checkbox [(ngModel)]=\\\"bShowDoneRecords\\\">Erledigte anzeigen</mat-checkbox>\\r\\n<!--  Neue Tabelle -->\\r\\n<table mat-table *ngIf=\\\"bShowDoneRecords\\\" [dataSource]=\\\"(todoListService.todos$ | todoFilterPipe: (true))\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Toggle Done Column-->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <th mat-header-cell  *matHeaderCellDef > Status </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n      <button mat-button (click)=\\\"todoListService.toggleDoneStateById4User(element)\\\">Undo</button>\\r\\n  </ng-container>\\r\\n\\r\\n   <!-- TodoDueDate Column -->\\r\\n   <ng-container matColumnDef=\\\"todoDueDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Fälligkeitsdatum</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate.seconds * 1000 | date:'EE, dd.MM.'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- subject Column -->\\r\\n  <ng-container matColumnDef=\\\"subject\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Fach </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subjectobj?.Fachname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- group Column -->\\r\\n  <ng-container matColumnDef=\\\"group\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Gruppe </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.groupobj?.Gruppenname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Description Column -->\\r\\n  <ng-container matColumnDef=\\\"category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Kategorie </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"todoDescription\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Beschreibung </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Toggle Done Column-->\\r\\n  <ng-container matColumnDef=\\\"deleteTodoById\\\">\\r\\n    <th mat-header-cell  *matHeaderCellDef > Löschen </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n      <button mat-button color=\\\"red\\\" (click)=\\\"todoListService.deleteTodoById(element.id)\\\">X</button>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n      (click)=\\\"todoListService.toggleDoneStateById(row.id)\\\">\\r\\n  </tr>\\r\\n</table>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TodoListService } from '../shared/todo-list.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { GruppeFBListService } from '../shared/gruppe-fb-list.service';\r\nimport {addFaecherListService } from '../shared/addFaecher.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './todo-list.component.html',\r\n  styleUrls: ['./todo-list.component.scss']\r\n})\r\nexport class TodoListComponent implements OnInit {\r\n  public todoDescription = '';\r\n  public todoDueDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n  public showDone = false;\r\n  public subject ='';\r\n  public group ='';\r\n  public category ='';\r\n  public displayedColumns = ['actions','todoDueDate','subject','group', 'category', 'todoDescription','deleteTodoById' ]\r\n\r\n\r\n  constructor(public todoListService: TodoListService, public GruppenFBListservice: GruppeFBListService, public addFaecherListService: addFaecherListService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public addTodo(): void {\r\n    if (this.todoDescription && this.todoDueDate && this.subject && this.group && this.category ) {\r\n      this.todoListService.addTodo(this.subject, this.group, this.todoDescription, this.category, new Date(this.todoDueDate));\r\n      this.subject = '';\r\n      this.group = '';\r\n      this.todoDescription = '';\r\n      this.category = '';\r\n      this.todoDueDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n    }\r\n  }\r\n}","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore, combineChange } from '@angular/fire/firestore';\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { Todo } from '../shared/todo';\r\nimport { TodoListService } from '../shared/todo-list.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { GruppeFBListService } from '../shared/gruppe-fb-list.service';\r\n\r\n\r\nimport { TodoListComponent } from '../todo-list/todo-list.component';\r\nimport {MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from \"@angular/material/dialog\"\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  public todoDescription = '';\r\n  public todoDueDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\r\n  public showDone = false;\r\n  public subject ='';\r\n  public group ='';\r\n  public category ='';\r\n  public displayedColumns = ['actions','todoDueDate','subject','group', 'category', 'todoDescription',] //,'deleteTodoById' ]\r\n  public bShowDoneRecords = false;\r\n\r\n\r\n\r\n  constructor( public todoListService: TodoListService, public grpService: GruppeFBListService,\r\n    private dialog: MatDialog ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n//\r\n onCreate(): void {\r\n  const dialogConfig = new MatDialogConfig();\r\n  let todoDialog =  this.dialog.open(TodoListComponent, dialogConfig);\r\n }\r\n\r\n  // getTodoPercentage(): number {\r\n  //   if (this.todoListService.todos.length) {\r\n  //     return this.todoListService.todos.filter(t => !t.doneDate).length / this.todoListService.todos.length * 100;\r\n  //   } else {\r\n  //     return 0;\r\n  //   }\r\n  // }\r\n\r\n  // getDonePercentage(): number {\r\n  //   if (this.todoListService.todos.length) {\r\n  //     return this.todoListService.todos.filter(t => t.doneDate).length / this.todoListService.todos.length * 100;\r\n  //   } else {\r\n  //     return 0;\r\n  //   }\r\n  // }\r\n\r\n  }","import { AngularFireAuth, AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport firebase from 'firebase/app';\r\nimport { UserService } from './shared/user.service';\r\nimport { TodoListService } from './shared/todo-list.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(public afAuth: AngularFireAuth, public router: Router, public userService: UserService) {\r\n  }\r\n\r\n  login(): void {\r\n    this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\r\n    .then((result) => {\r\n      var credential  = result.credential;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      this.userService.addUser(user?.uid, user?.displayName, user?.email)\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n    // .then(() => {\r\n\r\n    //   this.router.navigate(['dashboard']);\r\n    // });\r\n  }\r\n\r\n  logout(): void {\r\n    this.afAuth.signOut().then(() => {\r\n      this.router.navigate(['']);\r\n    });\r\n  }\r\n}\r\n","export default \"<h2>Gruppe</h2>\\r\\n\\r\\n\\r\\n<div class=\\\"addItem\\\">\\r\\n  <mat-form-field class=\\\"Gruppenname\\\">\\r\\n    <mat-label>Gruppenname</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"Gruppenname\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"Beschreibung\\\">\\r\\n    <mat-label>Beschreibung</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"Beschreibung\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <button mat-button (click)=\\\"addGruppe()\\\">Hinzufügen</button>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"(GruppenListService.gruppen$)\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--Löschen column-->\\r\\n  <ng-container matColumnDef=\\\"Löschen\\\">\\r\\n    <th mat-header-cell  *matHeaderCellDef >Löschen</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n      <div *ngIf=\\\"element.userUid === usrService.UserId\\\"><button mat-raised-button (click)=\\\"GruppenListService.deleteGruppeById(element.id)\\\">\\r\\n        <mat-icon>delete</mat-icon>Löschen\\r\\n      </button></div>\\r\\n      <div *ngIf=\\\"usrService.memberGroupsArr.indexOf(element.id) === -1\\\"><button mat-button (click)=\\\"usrService.addUser2Group(element.id)\\\">Beitreten</button></div>\\r\\n      <div *ngIf=\\\"usrService.memberGroupsArr.indexOf(element.id) !==-1\\\"><button mat-button (click)=\\\"usrService.remUserGroup(element.id)\\\">Verlassen</button></div>\\r\\n  </ng-container>\\r\\n\\r\\n    <!--groupName column-->\\r\\n    <ng-container matColumnDef=\\\"groupName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Gruppenname</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Gruppenname}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n    <!--groupDescription column-->\\r\\n      <ng-container matColumnDef=\\\"groupDescription\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Beschreibung</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Beschreibung}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n</table>\\r\\n\";","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { empty, Observable, Subscription } from 'rxjs';\r\n//import { Todo } from '../todo';\r\nimport { filter, first } from 'rxjs/operators';\r\nimport { Faecher } from './addFaecher';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class addFaecherListService {\r\n  public fach$: Observable<Faecher[]> = empty();\r\n\r\n  private userId = '';\r\n\r\n  constructor(public firestore: AngularFirestore, public afAuth: AngularFireAuth) {\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        this.userId = state.uid;\r\n        this.fach$ = firestore.collection<Faecher>('fach', ref => ref.orderBy('Fachname'))\r\n          .valueChanges({idField: 'id'});\r\n\r\n      } else {\r\n\r\n        this.userId = '';\r\n        this.fach$ = empty();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public getFachbyId(FachId: string): Observable<Faecher[]>{\r\n    // return this.firestore.doc<Fächer>('fach/' + grpId).valueChanges();\r\n    return this.firestore.collection<Faecher>('fach', ref => ref.where('id', '==', FachId).orderBy('Fachname'))\r\n      .valueChanges({IdField: 'id'});\r\n  }\r\n  public addFach(Fachname: string, Fachbeschreibung: string): void {\r\n    this.firestore.collection('fach').add\r\n    ({ Fachname:Fachname, Fachbeschreibung:Fachbeschreibung, userUid: this.userId });\r\n  }\r\n\r\n  public deleteFachById(id: string): void {\r\n    this.firestore.doc('fach/' + id).delete();\r\n    }\r\n\r\n  public updateFachById(fach: Faecher): void {\r\n      this.firestore.doc('fach/' + fach.id).update({ Fachname: fach.Fachname});\r\n    }\r\n\r\n}\r\n\r\n","export default \"<nav>\\r\\n  <ul>\\r\\n    <li><a routerLink=\\\"/todo-list\\\">Hinzufügen</a></li>\\r\\n    <li><a routerLink=\\\"/dashboard\\\">Aufgaben</a></li>\\r\\n    <li><a routerLink=\\\"/Gruppe\\\">Gruppe</a></li>\\r\\n    <li><a routerLink=\\\"/fach\\\">Fächer</a></li>\\r\\n  </ul>\\r\\n\\r\\n  <div *ngIf=\\\"afAuth.user | async as user\\\" class=\\\"user-info\\\">\\r\\n    {{ user.displayName }}\\r\\n    <button (click)=\\\"logout()\\\">Logout</button>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<main>\\r\\n  <div *ngIf=\\\"!(afAuth.user | async)\\\">\\r\\n    <h1>Login</h1>\\r\\n    <button (click)=\\\"login()\\\">Login</button>\\r\\n  </div>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TodoListComponent } from './todo-list/todo-list.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {GruppeComponent} from './gruppe/gruppe.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TodoFilterPipePipe } from './pipes/todo-filter-pipe.pipe';\r\n\r\nimport {MatTableModule, _MatTableDataSource} from '@angular/material/table';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { FaecherComponent } from './add-faecher/addFaecher.component';\r\n\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { GroupFilterPipe } from './pipes/group-filter.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TodoListComponent,\r\n    DashboardComponent,\r\n    TodoFilterPipePipe,\r\n    GruppeComponent,\r\n    FaecherComponent,\r\n    GroupFilterPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    AngularFireAuthModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    NoopAnimationsModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    MatCheckboxModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents:[TodoListComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","export default \"button {\\n  margin-right: 10px;\\n}\\n\\n.date {\\n  display: inline-block;\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGdydXBwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxxQkFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJncnVwcGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuZGF0ZSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgfSAiXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GruppeFBListService} from '../shared/gruppe-fb-list.service';\r\nimport { UserService } from '../shared/user.service';\r\nimport {MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from \"@angular/material/dialog\"\r\n\r\n@Component({\r\n  selector: 'app-gruppe',\r\n  templateUrl: './gruppe.component.html',\r\n  styleUrls: ['./gruppe.component.scss']\r\n})\r\nexport class GruppeComponent implements OnInit {\r\n\r\n  public Gruppenname = '';\r\n  public Beschreibung = '';\r\n  public displayedColumns = ['Löschen', 'groupName', 'groupDescription'];\r\n\r\n\r\n  constructor(public GruppenListService: GruppeFBListService, public usrService: UserService, \r\n    private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCreate(): void {\r\n    const dialogConfig = new MatDialogConfig();\r\n    let gruppeDialog =  this.dialog.open(GruppeComponent, dialogConfig);\r\n   }\r\n\r\n  public addGruppe(): void {\r\n\r\n    if (this.Gruppenname ) {\r\n      this.GruppenListService.addGruppe(this.Gruppenname, this.Beschreibung);\r\n      this.Gruppenname = '';\r\n      this.Beschreibung = '';\r\n    }\r\n  }\r\n}\r\n","//Source: https://github.com/AngularFirebase/133-firestore-joins-custom-rx-operators\r\n// See documentation in README.md file there.\r\n\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { combineLatest, pipe, of, defer, Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\n\r\nexport const leftJoin = (\r\n  afs: AngularFirestore,\r\n  field: string,\r\n  collection: string,\r\n  limit = 100\r\n) => {\r\n  return (source: Observable<any>) =>\r\n    defer(() => {\r\n      // Operator state\r\n      let collectionData: any;\r\n\r\n      // Track total num of joined doc reads\r\n      let totalJoins = 0;\r\n\r\n      return source.pipe(\r\n        switchMap(data => {\r\n          // Clear mapping on each emitted val ;\r\n\r\n          // Save the parent data state\r\n          collectionData = data as any[];\r\n\r\n          const reads$ = [];\r\n          for (const doc of collectionData) {\r\n            // Push doc read to Array\r\n\r\n            if (doc[field]) {\r\n              // Perform query on join key, with optional limit\r\n              const q = (ref: any) => ref.where(field, '==', doc[field]).limit(limit);\r\n\r\n              reads$.push(afs.collection(collection, q).valueChanges());\r\n            } else {\r\n              reads$.push(of([]));\r\n            }\r\n          }\r\n\r\n          return combineLatest(reads$);\r\n        }),\r\n        map((joins: any) => {\r\n          return collectionData.map((v: any, i:any) => {\r\n            totalJoins += joins[i].length;\r\n            return { ...v, [collection]: joins[i] || null };\r\n          });\r\n        }),\r\n        tap(final => {\r\n          console.log(\r\n            `Queried ${(final as any).length}, Joined ${totalJoins} docs`\r\n          );\r\n          totalJoins = 0;\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nexport const leftJoinDocument = (afs: AngularFirestore, field: string, collection: string, fieldToFill: string) => {\r\n  return (source: Observable<any>) =>\r\n    defer(() => {\r\n      // Operator state\r\n      let collectionData: any;\r\n      const cache = new Map();\r\n\r\n      return source.pipe(\r\n        switchMap(data => {\r\n          // Clear mapping on each emitted val ;\r\n          cache.clear();\r\n\r\n          // Save the parent data state\r\n          collectionData = data as any[];\r\n\r\n          const reads$ = [];\r\n          let i = 0;\r\n          for (const doc of collectionData) {\r\n            // Skip if doc field does not exist or is already in cache\r\n            if (!doc[field] || cache.get(doc[field])) {\r\n              continue;\r\n            }\r\n\r\n            // Push doc read to Array\r\n            reads$.push(\r\n              afs\r\n                .collection(collection)\r\n                .doc(doc[field])\r\n                .valueChanges()\r\n            );\r\n            cache.set(doc[field], i);\r\n            i++;\r\n          }\r\n\r\n          return reads$.length ? combineLatest(reads$) : of([]);\r\n        }),\r\n        map(joins => {\r\n          return collectionData.map((v: any, i: any) => {\r\n            const joinIdx = cache.get(v[field]);\r\n            return { ...v, [fieldToFill]: joins[joinIdx] || null };\r\n          });\r\n        }),\r\n        tap(final =>\r\n          console.log(\r\n            `Queried ${(final as any).length}, Joined ${cache.size} docs`\r\n          )\r\n        )\r\n      );\r\n    });\r\n};\r\n\r\nexport const docJoin = (\r\n    afs: AngularFirestore,\r\n    paths: { [key: string]: string }\r\n  ) => {\r\n    return (source: Observable<any>) =>\r\n      defer(() => {\r\n        let parent: any;\r\n        const keys = Object.keys(paths);\r\n  \r\n        return source.pipe(\r\n          switchMap(data => {\r\n            // Save the parent data state\r\n            parent = data;\r\n  \r\n            // Map each path to an Observable\r\n            const docs$ = keys.map(k => {\r\n              const fullPath = `${paths[k]}/${parent[k]}`;\r\n              return afs.doc(fullPath).valueChanges();\r\n            });\r\n  \r\n            // return combineLatest, it waits for all reads to finish\r\n            return combineLatest(docs$);\r\n          }),\r\n          map(arr => {\r\n            // We now have all the associated douments\r\n            // Reduce them to a single object based on the parent's keys\r\n            const joins = keys.reduce((acc, cur, idx) => {\r\n              return { ...acc, [cur]: arr[idx] };\r\n            }, {});\r\n  \r\n            // Return the parent doc with the joined objects\r\n            return { ...parent, ...joins };\r\n          })\r\n        );\r\n      });\r\n  };\r\n","export default \"button {\\n  margin-right: 10px;\\n}\\n\\n.date {\\n  display: inline-block;\\n  width: 100px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.controles-container {\\n  width: 100%;\\n  padding: 5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHRvZG8tbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxxQkFBQTtFQUNBLFlBQUE7QUFDSjs7QUFDQTtFQUFPLFdBQUE7QUFHUDs7QUFBRTtFQUNFLFdBQUE7RUFDQSxXQUFBO0FBR0oiLCJmaWxlIjoidG9kby1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmRhdGUge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gIH0gXHJcbnRhYmxlIHt3aWR0aDogMTAwJTtcclxuXHJcbiAgfVxyXG4gIC5jb250cm9sZXMtY29udGFpbmVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA1JTtcclxuICB9Il19 */\";","export default \"<h2>Fächer Hinzufügen</h2>\\r\\n\\r\\n<div class=\\\"addItem\\\">\\r\\n  <mat-form-field class=\\\"Fachname\\\">\\r\\n    <mat-label>Fach erstellen</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"Fachname\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"Fachbeschreibung\\\">\\r\\n    <mat-label>Fachbeschreibung</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"Fachbeschreibung\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <button mat-button (click)=\\\"addFach()\\\">Hinzufügen</button>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"(FaecherService.fach$)\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n\\r\\n  <ng-container matColumnDef=\\\"Löschen\\\">\\r\\n    <th mat-header-cell  *matHeaderCellDef >Löschen</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n    <div *ngIf=\\\"element.userUid === usrService.UserId\\\"><button mat-button (click)=\\\"FaecherService.deleteFachById(element.id)\\\">Löschen</button></div>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Fachname\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Fachname</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Fachname}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Fachbeschreibung\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Beschreibung</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Fachbeschreibung}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<!--<table>\\r\\n    <tr>\\r\\n        &nbsp; <th>Fachname</th>\\r\\n        <th>Fachbeschreibung</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let item of addFächerListService.fach | async\\\">\\r\\n        <button (click)=\\\"FächerListService.deleteFachById(item.id)\\\">Löschen</button>\\r\\n            <td class=\\\"Fachname\\\">{{ item.Fachname }}</td>\\r\\n            <td class=\\\"Fachbeschreibung\\\">{{ item.Fachbeschreibung }}</td>\\r\\n    </tr>\\r\\n</table>-->\\r\\n\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GruppeFB } from '../shared/gruppe-fb';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Pipe({\r\n  name: 'groupFilter'\r\n})\r\nexport class GroupFilterPipe implements PipeTransform {\r\n  constructor(public usrService: UserService){}\r\n\r\n  transform(groups: Observable<GruppeFB[]>): Observable<GruppeFB[]> {\r\n    return groups.pipe(map(g => {\r\n      return g.filter( g => {\r\n        return (this.usrService.memberGroupsArr.indexOf(g.id) !== -1)\r\n      });\r\n    }))\r\n\r\n  }\r\n\r\n}\r\n","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore, combineChange } from '@angular/fire/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subscription, empty, forkJoin, combineLatest, merge } from 'rxjs';\r\nimport { combineAll, exhaustMap, filter, map, mapTo, switchMap } from 'rxjs/operators';\r\nimport { Todo } from './todo';\r\nimport { GruppeFB } from './gruppe-fb';\r\nimport { GruppeFBListService } from './gruppe-fb-list.service';\r\nimport { leftJoinDocument } from './helpers/database-joins';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoListService {\r\n  public todos$: Observable<Todo[]> = empty();\r\n  private userUid = '';\r\n\r\n  constructor(public firestore: AngularFirestore, public afAuth: AngularFireAuth, private gruppenService: GruppeFBListService, public usrService: UserService) {\r\n    this.afAuth.authState.subscribe(state => {\r\n      if (state?.uid) {\r\n        this.userUid = state.uid;\r\n        this.todos$ = firestore.collection<Todo>('todos', ref => ref.orderBy('dueDate'))//.where('group', 'in', this.usrService.memberGroupsArr))\r\n          .valueChanges({idField: 'id'}).pipe(leftJoinDocument(firestore, 'group', 'gruppen', 'groupobj'), leftJoinDocument(firestore, 'subject', 'fach', 'subjectobj'));\r\n\r\n      } else {\r\n        this.userUid = '';\r\n        this.todos$ = empty();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getTodosFilterd(done: boolean): Observable<Todo[]>{\r\n    if (this.userUid != '') {\r\n      return this.todos$.pipe(map(t => {\r\n        return t.filter( (t: any) => { return (done === true && t.doneDate) || (done === false && !t.doneDate); });\r\n      }));\r\n    }\r\n    else\r\n    {\r\n      return empty();\r\n    }\r\n  }\r\n\r\n  public addTodo(subject: string, group: string, description: string, category: string, dueDate: Date): void {\r\n    this.firestore.collection('todos').add\r\n    ({ dueDate: dueDate, subject: subject, group: group, description: description, category: category, userUid: this.userUid });\r\n  }\r\n\r\n  public deleteTodoById(id: string): void {\r\n    this.firestore.doc('todos/' + id).delete();\r\n  }\r\n\r\n  public updateTodoById(todo: Todo): void {\r\n    this.firestore.doc('todos/' + todo.id).update({ description: todo.description, dueDate: todo.dueDate });\r\n  }\r\n\r\n  public toggleDoneStateById(todo: Todo): void {\r\n    if (todo.id)\r\n      this.firestore.doc('todos/' + todo.id).update({ doneDate: todo.doneDate ? null : new Date() });\r\n  }\r\n\r\n\r\n  public toggleDoneStateById4User(todo: Todo): void {\r\n    if (todo.id){\r\n      if (!todo.doneByUser)\r\n      {\r\n        todo.doneByUser = [];\r\n      }\r\n      if (todo.doneByUser.indexOf(this.usrService.UserId) === -1){\r\n        todo.doneByUser.push(this.usrService.UserId);\r\n      }\r\n      else\r\n      {\r\n      todo.doneByUser.splice(todo.doneByUser.indexOf(this.usrService.UserId), 1);\r\n      }\r\n      this.firestore.doc('todos/' + todo.id).update({ doneByUser: todo.doneByUser});\r\n    }\r\n  }\r\n}\r\n","export default \"\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"addItem\\\">\\r\\n  <!-- Fach -->\\r\\n  <p>\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Wähle ein Fach aus:</mat-label>\\r\\n      <mat-select id=\\\"subject\\\" name=\\\"subject\\\" [(ngModel)]=\\\"subject\\\">\\r\\n        <mat-option *ngFor=\\\"let item of (addFaecherListService.fach$ | async)\\\" [value]=\\\"item.id\\\">{{item.Fachname}}</mat-option>\\r\\n      </mat-select>\\r\\n      <mat-hint align=\\\"end\\\">Wähle das Fach aus.</mat-hint>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <!-- Gruppe -->\\r\\n  <p>\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Wähle eine Gruppe aus:</mat-label>\\r\\n      <mat-select id=\\\"group\\\" name=\\\"group\\\" [(ngModel)]=\\\"group\\\">\\r\\n        <mat-option *ngFor=\\\"let item of (GruppenFBListservice.gruppen$ | groupFilter | async)\\\" [value]=\\\"item.id\\\">{{item.Gruppenname}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n\\r\\n  <!-- Kategorie -->\\r\\n  <p>\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Wähle eine Kategorie aus:</mat-label>\\r\\n      <mat-select id=\\\"category\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\">\\r\\n        <mat-option value=\\\"HÜ\\\">Hausübung</mat-option>\\r\\n        <mat-option value=\\\"WH\\\">Wiederholung</mat-option>\\r\\n        <mat-option value=\\\"Test\\\">Test</mat-option>\\r\\n        <mat-option value=\\\"SA\\\">Schularbeit</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Datum fällig:</mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"todoDueDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Beschreibung:</mat-label>\\r\\n      <textarea matInput cols = \\\"50\\\" rows = \\\"2\\\" [(ngModel)]=\\\"todoDescription\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n\\r\\n  <button mat-button (click)=\\\"addTodo()\\\">Hinzufügen</button>\\r\\n</div>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Todo } from '../shared/todo';\r\nimport { UserService } from '../shared/user.service';\r\nimport firestore from 'firebase/app';\r\n\r\n\r\n@Pipe({\r\n  name: 'todoFilterPipe'\r\n})\r\n\r\n\r\nexport class TodoFilterPipePipe implements PipeTransform {\r\n  constructor(public usrService: UserService){}\r\n\r\n\r\n\r\n  transform(todos: Observable<Todo[]>, done: boolean | null): Observable<Todo[]> {\r\n\r\n    return todos.pipe(map(t => {  \r\n      return t.filter( t => { \r\n        return ((done === true && t.doneByUser && (t.doneByUser?.indexOf(this.usrService.UserId) !== -1)) || \r\n          (done === false &&  ((!t.doneByUser) || t.doneByUser?.indexOf(this.usrService.UserId) === -1))) \r\n          && (this.usrService.memberGroupsArr.indexOf(t.group) !== -1)\r\n      });\r\n    }))\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { TodoListComponent } from './todo-list/todo-list.component';\r\nimport { AngularFireAuthGuard } from '@angular/fire/auth-guard';\r\nimport { GruppeComponent } from './gruppe/gruppe.component';\r\nimport { FaecherComponent} from './add-faecher/addFaecher.component'\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AngularFireAuthGuard] },\r\n  { path: 'todo-list', component: TodoListComponent, canActivate: [AngularFireAuthGuard] },\r\n  { path: 'Gruppe', component: GruppeComponent, canActivate: [AngularFireAuthGuard] },\r\n  { path: 'fach', component: FaecherComponent, canActivate: [AngularFireAuthGuard] }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"ul {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  margin: 0;\\n  padding: 0 40px;\\n  width: 100%;\\n  background-color: #ffeb3b;\\n  height: 40px;\\n  line-height: 40px;\\n}\\n\\nli {\\n  display: inline;\\n  margin-right: 40px;\\n}\\n\\nmain {\\n  margin-top: 40px;\\n  padding: 40px;\\n}\\n\\n.user-info {\\n  position: absolute;\\n  right: 40px;\\n  top: 0;\\n  line-height: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBQ0E7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxNQUFBO0VBQ0EsaUJBQUE7QUFFSiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMCA0MHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlYjNiO1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcbmxpIHtcclxuICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgIG1hcmdpbi1yaWdodDogNDBweDtcclxufVxyXG5cclxubWFpbiB7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgcGFkZGluZzogNDBweDtcclxufVxyXG4udXNlci1pbmZvIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiA0MHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XHJcbiAgfSJdfQ== */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}